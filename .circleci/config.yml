# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
# orbs:
#   # Declare a dependency on the welcome-orb
#   welcome: circleci/welcome-orb@0.4.1
# # Orchestrate or schedule a set of jobs

#My own Jobs
jobs:
  # First Job
  print_hello:
    # use the the Docker Executor
    docker:
      # Use a light weight image
      - image: circleci/node:13.8.0
      # a step that runs a simple Bash command
    steps:
      - run: echo hello 

  # Second-job
  print_srename:
    docker:
      -  image: circleci/node:13.8.0
    steps:
      - run: echo jldroid25 

  # Printing Env Var in Project Setup
  print_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout 
      - run:
          name: "echo an ENV var in pipeline project-setup section"
          command: | 
            echo $VIZGEN_DEVOPSRENGINEER_NAME

  # A Job for Sharing File 
  engineer_job_postion_title:
    docker:
      - image: circleci/node:13.8.0
    steps:
    # save the data to this file/create if not exist
      - run: echo "Site Reliability Engineer" > ~/Users/jimad12/Desktop/DEVOPS/Courses/CICD/circleci-pipeline/output.txt
      - persist_to_workspace:
          root: ~/Users/jimad12/Desktop/DEVOPS/Courses/CICD/circleci-pipeline/
          paths:
            - output.txt 
  # Job to print the file data
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/Users/jimad12/Desktop/DEVOPS/Courses/CICD/circleci-pipeline/
      - run: cat ~/output.txt


workflows:
  #Name the workflow "welcome"
   welcome:

    # # Run the welcome/run job in its own container
    jobs:
    #   - welcome/run

    # Run the print_hello  
      - print_hello

    # & print_srename
      - print_srename:
        # Use the requires key to make your print_srename wait
        # for the print_hello job to finish.
          requires:
            - print_hello

    # Running the ENV Var job
      - print_env_var 

    # Run the  engineer_job_postion_title's job
      - engineer_job_postion_title
      - print_output_file:
          requires:
            - engineer_job_postion_title
