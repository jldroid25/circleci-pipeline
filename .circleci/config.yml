# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

#---------------My own Jobs
jobs:
  # -----------------First Job
  print_hello:
    # use the the Docker Executor
    docker:
      # Use a light weight image
      - image: circleci/node:13.8.0
      # a step that runs a simple Bash command
    steps:
      - run: echo hello 

  #------------------- My Second-job
  print_srename:
    docker:
      -  image: circleci/node:13.8.0
    steps:
      - run: echo jldroid25 

  # ----------Job to Print Env Variable's Key (not its value) once job runs
  print_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout 
      - run:
          name: "echo an ENV var in pipeline project-setup section"
          command: | 
            echo $VIZGEN_DEVOPSRENGINEER_NAME

  #--------------------- A Job for Sharing a File between two jobs
  engineer_job_postion_title:
    docker:
      - image: circleci/node:13.8.0
    steps:
    # save the data to this file/create if not exist
      - run: echo "Site Reliability Engineer" > ~/output.txt

      # persist_to_workspace: Special step used to persist a temporary file to be used 
      # by another job in the workflow.
      - persist_to_workspace:

        # Root: (Required), Either an absolute path or a path relative to working_directory
          root: ~/

          # Path: (Required), Glob identifying file(s), or a non-glob path to a directory to 
          # add to the shared workspace. 
          # Interpreted as relative to the workspace root. 
          # Must not be the workspace root itself.
          paths:
            - output.txt 
  # Job to print the file data
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      # similar to attaching a hard drive.
      #Attach_workspace: (required), Special step used to attach the workflowâ€™s workspace to the current container. 
      # The full contents of the workspace are downloaded and copied into the directory 
      # the workspace is being attached at
      - attach_workspace:

        # at: (required), Directory to attach the workspace to.
          at: ~/
        # Bash command to Print the content 
      - run: cat ~/output.txt

# ---------------- Workflow section ----------
workflows:
  # Name the workflow "DevOps-SRE-WF"
   DevOps-Sre-WF:
    jobs:
    # Run the print_hello  
      - print_hello

    # & print_srename
      - print_srename:
        # Use the requires key to make your print_srename wait
        # for the print_hello job to finish.
          requires:
            - print_hello

    # Running the ENV Var job
      - print_env_var 

    # Run the  engineer_job_postion_title's job
      - engineer_job_postion_title
      - print_output_file:
          requires:
            - engineer_job_postion_title
